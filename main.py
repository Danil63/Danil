# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import logging
import asyncio
import requests
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import ParseMode, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import schedule
import time
import datetime

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token="6091626104:AAHPxXmAeRaPjnMBe1VO_6JI05lQfl21gKw")
dp = Dispatcher(bot)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("üíªüåê –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∞–≥—Ä–µ–≥–∞—Ç–æ—Ä! ü§ù –ú—ã —Ä–∞–¥—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –≤–µ–¥—É—â–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –≤ –ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. üèô‚ú®")
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False, selective=True)
    markup.add(KeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ"))
    markup.add(KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
    markup.add(KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏"))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ"
@dp.message_handler(lambda message: message.text == "–í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ")
async def process_service_order(message: types.Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False, selective=True)
    markup.add(KeyboardButton("–†–æ—Å—Ç–µ–ª–µ–∫–æ–º"), KeyboardButton("–ú–¢–°"))
    markup.add(KeyboardButton("–ú–µ–≥–∞—Ñ–æ–Ω"), KeyboardButton("–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"))
    markup.add(KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è"))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
@dp.message_handler(lambda message: message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def process_service_info(message: types.Message):
    text = """
    üîπ Multinet - —ç—Ç–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∞–≥—Ä–µ–≥–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ. Multinet –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–∞–π—Ç–∏ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏ –≤—ã–≥–æ–¥–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –Ω–∞ –¥–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. üíªüåêüí∞
üîπ Multinet –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ—Ç –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–µ, —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–∞—Ö –∏ –¥—Ä—É–≥–∏—Ö –¥–µ—Ç–∞–ª—è—Ö. üè†üåêüìä
üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —Å—Ä–∞–≤–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–µ–±—è. Multinet –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Ä—ã–Ω–∫–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—É—Å–ª—É–≥. üëç
    """
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False, selective=True)
    markup.add(KeyboardButton("–≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ"))
    await message.answer(text, reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–æ—Å—Ç–µ–ª–µ–∫–æ–º"
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–∞—Ä–∏—Ñ–æ–≤ –ú–¢–°
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ"
def create_button():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ", url="https://www.tbforum.ru/hs-fs/hubfs/%D0%A2%D0%A1%D0%A1%20(+%D0%BA%D0%A1%D0%A1%D0%92)/%D0%A0%D0%BE%D1%81%D1%82%D0%B5%D0%BB%D0%B5%D0%BA%D0%BE%D0%BC-4.jpg?width=2560&name=%D0%A0%D0%BE%D1%81%D1%82%D0%B5%D0%BB%D0%B5%D0%BA%D0%BE%D0%BC-4.jpg"))
    return markup

@dp.message_handler(lambda message: message.text == "–†–æ—Å—Ç–µ–ª–µ–∫–æ–º")
async def process_rostelecom(message: types.Message):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏
    tariffs =[
        {"name": " –¢–∞—Ä–∏—Ñ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ—Å—Ç—É–ø–∞",
         "description": " –î–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç\n –°–∫–æ—Ä–æ—Å—Ç—å: 100 –ú–±–∏—Ç/—Å–µ–∫",
         "price": " 450 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü\n –ù–∞–¥–µ–∂–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ - —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å!"},
        {"name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π",
         "description": "–¥–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç: 100 –º–±–∏—Ç/—Å, –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ :187 –∫–∞–Ω–∞–ª–æ–≤",
         "price": "700 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"},
        {"name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –æ–±—â–µ–Ω–∏—è",
         "description": "–¥–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç: 100 –º–±–∏—Ç/—Å, –º–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å: 50 –≥–± –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ / 1200 –º–∏–Ω—É—Ç",
         "price": "590 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"},
        {"name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤—ã–≥–æ–¥—ã",
         "description": "–¥–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100 –º–±–∏—Ç/—Å, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ 187 –∫–∞–Ω–∞–ª–æ–≤, –º–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å: 50 –≥–± –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ / 1200 –º–∏–Ω—É—Ç",
         "price": "780 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"},
        {"name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤—ã–≥–æ–¥—ã+",
         "description": "–¥–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100–º–±–∏—Ç/—Å, –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ 197 –∫–∞–Ω–∞–ª–æ–≤, –º–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å 3 —Å–∏–º 50–≥–± –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞/ 2000 –º–∏–Ω—É—Ç",
         "price": "950 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"}
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç–∞—Ä–∏—Ñ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ"
    for tariff in tariffs:
        text = f"–¢–∞—Ä–∏—Ñ {tariff['name']}\n{tariff['description']}\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {tariff['price']}"
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ", url="https://t.me/NoName_1101"))
        await message.answer(text, reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–¢–°"
@dp.message_handler(lambda message: message.text == "–ú–¢–°")
async def process_mts(message: types.Message):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏ –ú–¢–°
    tariffs = [
        {"name": "Smart", "description": "500 –º–∏–Ω—É—Ç, 30 –ì–ë –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", "price": "500 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"},
        {"name": "Ultra", "description": "–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∑–≤–æ–Ω–∫–∏, 50 –ì–ë –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", "price": "800 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"},
        {"name": "Max", "description": "3000 –º–∏–Ω—É—Ç, 100 –ì–ë –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", "price": "1500 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"},
        {"name": "Lite", "description": "200 –º–∏–Ω—É—Ç, 10 –ì–ë –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", "price": "300 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"},
        {"name": "Super", "description": "1000 –º–∏–Ω—É—Ç, 60 –ì–ë –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", "price": "1000 —Ä—É–±–ª–µ–π/–º–µ—Å—è—Ü"}
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç–∞—Ä–∏—Ñ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ"
    for tariff in tariffs:
        text = f"–¢–∞—Ä–∏—Ñ {tariff['name']}\n{tariff['description']}\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {tariff['price']}"
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ", url="https://t.me/NoName_1101"))
        await message.answer(text, reply_markup=markup)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–µ–≥–∞—Ñ–æ–Ω"
@dp.message_handler(lambda message: message.text == "–ú–µ–≥–∞—Ñ–æ–Ω")
async def process_mts(message: types.Message):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏
    tariffs = [
        {"name": "#–î–ª—è–î–æ–º–∞ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç", "description": "–î–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100 –º–±–∏—Ç/—Å\n–†–æ—É—Ç–µ—Ä 99—Ä –Ω–∞ 36 –º–µ—Å\n344—Ä –≤ –º–µ—Å—è—Ü"},
        {"name": "#–î–ª—è–î–æ–º–∞ –í—Å—ë",
         "description": "–î–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100–º–±–∏—Ç/—Å\n–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ 180 –∫–∞–Ω–∞–ª–æ–≤\n–†–æ—É—Ç–µ—Ä 99—Ä –Ω–∞ 36 –º–µ—Å\n–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ 159 –Ω–∞ 36 –º–µ—Å"},
        {"name": "#–î–ª—è–î–æ–º–∞ –ú–∞–∫—Å–∏–º—É–º",
         "description": "–î–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100–º–±–∏—Ç/—Å\n–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ 250 –∫–∞–Ω–∞–ª–æ–≤\n–†–æ—É—Ç–µ—Ä 99—Ä –Ω–∞ 36 –º–µ—Å\n–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ 159 –Ω–∞ 36 –º–µ—Å\n–¶–µ–Ω–∞: 664—Ä"},
        {"name": "#–û–±—ä–µ–¥–∏–Ω—è–π! –î–≤–∞ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–∞",
         "description": "–î–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100 –º–±–∏—Ç/—Å\n–ú–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å: 30 –ì–ë, 1000 –º–∏–Ω—É—Ç\n–†–æ—É—Ç–µ—Ä 89—Ä –Ω–∞ 36 –º–µ—Å.\n–¶–µ–Ω–∞: 420—Ä"},
        {"name": "#–û–±—ä–µ–¥–∏–Ω—è–π! –•–∏—Ç",
         "description": "–î–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100 –º–±–∏—Ç/—Å\n–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ: 180 –∫–∞–Ω–∞–ª–æ–≤\n–ú–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å: 30 –ì–ë, 1300 –º–∏–Ω—É—Ç\n–†–æ—É—Ç–µ—Ä: 89—Ä –Ω–∞ 36 –º–µ—Å\n–¢–≤ –ø—Ä–∏—Å—Ç–∞–≤–∫–∞: 149—Ä –Ω–∞ 36 –º–µ—Å.\n–¶–µ–Ω–∞: 350—Ä"},
        {"name": "#–û–±—ä–µ–¥–∏–Ω—è–π! –ú–∞–∫—Å–∏–º—É–º",
         "description": "–î–æ–º–∞—à–Ω–∏–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç 100 –º–±–∏—Ç/—Å\n–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ 180 –∫–∞–Ω–∞–ª–æ–≤\n–ú–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å: 45 –ì–ë, 2000 –º–∏–Ω—É—Ç\n–†–æ—É—Ç–µ—Ä –∞—Ä–µ–Ω–¥–∞: 89—Ä\n–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ –∞—Ä–µ–Ω–¥–∞: 109—Ä\n–¶–µ–Ω–∞: 630—Ä"}
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç–∞—Ä–∏—Ñ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ"
    for tariff in tariffs:
        text = f"{tariff['name']}\n{tariff['description']}"
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞—Ä–∏—Ñ", url="https://t.me/NoName_1101"))
        await message.answer(text, reply_markup=markup)

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è"
@dp.message_handler(lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è")
async def process_return(message: types.Message):
   markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False, selective=True)
   markup.add(KeyboardButton("–≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ"))
   markup.add(KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
   markup.add(KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏"))
   await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler()
async def unknown_message(message: types.Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False, selective=True)
    markup.add(KeyboardButton("–≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ"))
    markup.add(KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
    markup.add(KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏"))
    await message.answer("–£–ø—Å üò¨, –∫–∞–∂–µ—Ç—Å—è, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –ø–æ –Ω–æ–º–µ—Ä—É 89205552222 ‚òéÔ∏è. –û–Ω–∏ —Å–º–æ–≥—É—Ç –ø–æ–º–æ—á—å –≤–∞–º —Ä–µ—à–∏—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. –ë—É–¥—å—Ç–µ —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º! üòä", reply_markup=markup)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


